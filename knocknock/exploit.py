#!/usr/bin/env python3

from pwn import *

#context.log_level = "DEBUG"

IP = "knockknock.advent2021.overthewire.org"
initport = 25000
DIRNAME = "src/data"


def stripCrap(line):
    charset = string.ascii_lowercase + " " + string.digits
    return "".join([c for c in line.lower() if c in charset])


def readSongs():
    onlyfiles = [f for f in os.listdir(
        DIRNAME) if os.path.isfile(os.path.join(DIRNAME, f))]

    out = {}

    for fn in onlyfiles:
        out[fn] = [x.strip()
                   for x in open(os.path.join(DIRNAME, fn)).readlines()]
    return out


SONGS = readSongs()
CURRENTSONG = None
CURRENTLINE = 0


def nextline(crapline):
    global CURRENTSONG, CURRENTLINE
    line = stripCrap(crapline)
    if CURRENTSONG is None:
        res = [k for (k, v) in SONGS.items() if stripCrap(v[0]) == line]
        assert len(res) == 1
        CURRENTSONG = res[0]
        CURRENTLINE = 0

    lines = [stripCrap(x) for x in SONGS[CURRENTSONG]]
    lastline = lines[CURRENTLINE]
    assert lastline == line
    CURRENTLINE += 1
    if len(lines) == CURRENTLINE:
        return None
    return stripCrap(lines[CURRENTLINE])


def crackport(origline, h):
    line = stripCrap(origline)
    for i in range(65536):
        t = f"{line} -- {i}"
        if h == hashlib.sha256(t.encode()).hexdigest():
            return i
    return None


def doorclient(port, lastline, line, initial=False):
    p = connect(IP, port)

    p.readuntil("]==\n")
    if initial:
        p.write("knock knock\n")
        p.readuntil("Sing me this song...\n")
        line = p.readline().decode().strip()
        print(f"First line: {line}")
        h = p.readline().decode().strip()
        print(f"Hash = {h}")
        port = crackport(line, h)
        print(f"Port = {port}")
        p.close()
        return stripCrap(line), port

    else:
        p.write(f"{lastline}\n")

        h = p.readline().decode().strip()
        print(f"Hash = {h}")
        port = crackport(line, h)
        print(f"Port = {port}")
        p.close()
        return line, port


lastline, newport = doorclient(initport, None, None, initial=True)
while True:
    line = nextline(lastline)
    lastline, newport = doorclient(newport, lastline, line, initial=False)
